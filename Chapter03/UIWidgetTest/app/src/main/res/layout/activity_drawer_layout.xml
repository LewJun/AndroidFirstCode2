<?xml version="1.0" encoding="utf-8"?>
<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/drawer_layout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="com.example.uiwidgettest.appcompats.DrawerLayoutActivity">
    <!--将主屏幕作为第一个子控件
    CoordinatorLayout 可以监听其所有子控件的各种事件，然后自动帮助我们做出合理的响应。它是一个加强版的FrameLayout
    -->
    <android.support.design.widget.CoordinatorLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <!--使用AppBarLayout解决标题栏被RecyclerView覆盖的问题
        1 将Toolbar加入到AppBarLayout中
        2 给Recycler指定一个布局行为app:layout_behavior="@string/appbar_scrolling_view_behavior" 这样就将滚动事件告知了AppBarLayout
        如上两步就解决了标题栏被RecyclerView覆盖的问题
        -->
        <android.support.design.widget.AppBarLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content">
            <!--
        height设置为ActionBar的高度
        不设置背景将默认为白色，背景颜色设置android:background="?attr/colorPrimary"
        因为AppTheme设置了淡色，那么此时toolbar也将使用淡色作为主题，toolbar上的元素将自动
        使用深色系，这是为了和主体颜色区分。但是这个效果看起来就会很差，之前ActionBar上的文字
        都是白色，现在变成了黑色，所以，这里给toolbar单独使用深色主题。
        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"

        如果toolbar上有弹出菜单，那么弹出菜单的项也会使用深色主题，效果也很丑，这里我们为弹出菜单应用淡色主题。
            app:popupTheme="@style/ThemeOverlay.AppCompat.Light"

            AppBarLayout接收到滚动事件后，它内部的子控件可以去响应这些事件 scroll|enterAlways|snap
            scroll 表示当rv向上滚动的时候，Toolbar会跟着一起向上滚动并实现隐藏，如果只指定scroll，那么在开始滚动的时候就滚动
            enterAlways 表示当rv向下滚动的时候，Toolbar会跟着一起向下滚动并重新显示
            snap 表示当Toolbar还没有完全显示或隐藏的时候，会根据当前滚动的距离，自动选择是显示还是隐藏。
            只要稍微向下滑动界面，滚动条就又显示出来了。
        -->
            <android.support.v7.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/colorPrimary"
                android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
                app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
                app:layout_scrollFlags="scroll|enterAlways|snap"
                />

        </android.support.design.widget.AppBarLayout>

        <!--为RecyclerView添加下拉刷新功能
        并将布局行为放到SwipeRefreshLayout上
        -->
        <android.support.v4.widget.SwipeRefreshLayout
            android:id="@+id/swipe_refresh"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:layout_behavior="@string/appbar_scrolling_view_behavior"
            >

            <android.support.v7.widget.RecyclerView
                android:id="@+id/recycler_view"
                android:layout_width="match_parent"
                android:layout_height="match_parent" />
        </android.support.v4.widget.SwipeRefreshLayout>


        <!--
        FloatingActionButton 浮动按钮的使用
        app:elevation="5dp" 设置投影范围
        -->
        <android.support.design.widget.FloatingActionButton
            android:id="@+id/fab"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_margin="16dp"
            android:src="@drawable/ic_done"
            android:layout_gravity="end|bottom"
            />
    </android.support.design.widget.CoordinatorLayout>

    <!--
    作为第二个子控件，layout_gravity必须要指定，告诉DrawerLayout侧滑菜单在屏幕的位置左边还是右边
    设置为start和end，app会根据系统的语言来判断是从左还是右
    如果没有设置背景，那真是。。。
    设置按钮和头app:headerLayout="@layout/nav_header"
        app:menu="@menu/nav_menu"
    -->
    <android.support.design.widget.NavigationView
        android:id="@+id/nav_view"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        app:headerLayout="@layout/nav_header"
        app:menu="@menu/nav_menu"/>

</android.support.v4.widget.DrawerLayout>
